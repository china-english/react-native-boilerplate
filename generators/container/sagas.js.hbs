/*
 *
 * {{ properCase name }} sagas
 *
 */
import {
  {{#if wantActionsAndReducer}}
  // takeLatest,
  {{else}}
  // takeLatest,
  {{/if}}
  // cancel,
  // call,
  put,
} from 'redux-saga/effects';

{{#if wantActionsAndReducer}}
import { defaultAction } from './actions';
{{/if}}

export function* defaultSaga() {
  try {
    yield put(defaultAction());
    console.log('Good job! Success inject sagas in {{ properCase name }}');
  } catch (error) {
    console.log('Opps! There seem to be some problems When we use sagas, please check it');
  }
}

export function* watchDefaultSaga() {
  {{#if wantActionsAndReducer}}
  // yield takeLatest(DEFAULT_ACTION, defaultSaga);
  {{/if}}
  // yield cancel(watcher);
}

export default [
  {
    key: '{{ camelCase name }}',
    saga: defaultSaga,
  },
];
