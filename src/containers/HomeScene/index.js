/**
 *
 * HomeScene Container
 *
 */

import React from 'react';
import PropTypes from 'prop-types';
import { Actions } from 'react-native-router-flux';
import { compose } from 'redux';
import { connect } from 'react-redux';
import { createPropsSelector } from 'reselect-immutable-helpers';
import {
  Container,
  Footer,
  FooterTab,
  Button,
  Content,
  Text,
} from 'native-base';

import Header from '../../components/Header';

import injectReducer from '../../utils/injectReducer';
import injectSaga from '../../utils/injectSaga';

import sagas from './sagas';
import { selectTest } from './selectors';
import { selectCounter } from '../../selectors';

import {
  addToCounter,
  minusToCounter,
} from '../../actions';
import reducer from './reducer';

import styles from './styles';

export class HomeScene extends React.Component { // eslint-disable-line react/prefer-stateless-function
  // constructor(props) {
  //   super(props);
  //   this.state = {
  //   };
  // }
  //
  // componentWillMount() {
  // }
  //
  // componentWillReceiveProps(nextProps) {
  // }
  //
  // componentDidMount() {
  // }
  //
  // componentWillUnmount() {
  // }

  // onClick = () => {
  // }

  render() {
    const {
      addCounter, minusCounter, counter, test,
    } = this.props;
    return (
      <Container>
        <Header title="Home Scene" hasLeft={false} hasRight={false} />

        <Content
          contentContainerStyle={styles.contentContainer}
          style={styles.content}
        >
          <Text style={styles.generateText}>{test}</Text>
          <Text>This page is generated by the generator</Text>
          <Text>此页面由生成器生成</Text>
          <Button
            onPress={() => {
              Actions.push('login');
            }}
            style={styles.button}
          >
            <Text>Go to Login!</Text>
          </Button>
          <Button
            onPress={() => {
              addCounter();
            }}
            style={styles.button}
          >
            <Text>Add counter</Text>
          </Button>
          <Button
            onPress={() => {
              minusCounter();
            }}
            style={styles.button}
          >
            <Text>Minus counter</Text>
          </Button>
          <Text>
            {counter}
          </Text>
        </Content>
        <Footer>
          <FooterTab style={styles.footerTble}>
            <Text>Login footer</Text>
          </FooterTab>
        </Footer>
      </Container>
    );
  }
}

HomeScene.defaultProps = {
  counter: 0,
  minusCounter: null,
  addCounter: null,
  test: '',
};

HomeScene.propTypes = {
  counter: PropTypes.number,
  minusCounter: PropTypes.func,
  addCounter: PropTypes.func,
  test: PropTypes.string,
};


const mapStateToProps = createPropsSelector({
  counter: selectCounter,
  test: selectTest,
});

const mapDispatchToProps = (dispatch) => ({
  addCounter: () => dispatch(addToCounter()),
  minusCounter: () => dispatch(minusToCounter()),
});

const withConnect = connect(mapStateToProps, mapDispatchToProps);

const withReducer = injectReducer({ key: 'homeScene', reducer });

const withSagas = sagas.map((saga) => injectSaga(saga));

export default compose(
  withReducer,
  ...withSagas,
  withConnect,
)(HomeScene);
